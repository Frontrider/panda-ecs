version = "0.1.0-SNAPSHOT"

apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'jacoco'

apply from: "$rootDir/gradle/common/dependencies.gradle"
apply from: "$rootDir/gradle/common/kotlin.gradle"

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath "io.spring.gradle:dependency-management-plugin:0.5.4.RELEASE"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:0.9.8"
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.0-M2'
    }
}

project.afterEvaluate {
    def junitPlatformTestTask = project.tasks.getByName('junitPlatformTest')

    // configure jacoco to analyze the junitPlatformTest task
    jacoco {
        // this tool version is compatible with
        toolVersion = "0.7.6.201602180812"
        applyTo junitPlatformTestTask
    }

    // create junit platform jacoco task
    project.task(type: JacocoReport, "junitPlatformJacocoReport", {
        dependsOn junitPlatformTestTask
        sourceDirectories = files("src/main")
        classDirectories = files("$buildDir/classes/main")
        executionData junitPlatformTestTask
    })

    check {
        dependsOn junitPlatformJacocoReport
    }
}

junitPlatform {
    engines {
        include 'spek'
    }
}



dependencies {
    compile "org.jetbrains.kotlin:kotlin-reflect"
    compile "org.jetbrains.kotlin:kotlin-stdlib"

    testCompile 'com.natpryce:hamkrest'

    testCompile 'org.jetbrains.spek:spek-api'
    testRuntime 'org.jetbrains.spek:spek-junit-platform-engine'

    // required by the Spek plugin
    testRuntime 'org.junit.platform:junit-platform-launcher'
}

task wrapper(type: Wrapper) {
    gradleVersion = 2.13
}
